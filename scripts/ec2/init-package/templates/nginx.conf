user       www-data;
worker_processes  4;
error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;
worker_rlimit_nofile 8192;

events {
  worker_connections  1024;
}

http {
  include    /etc/nginx/mime.types;
  include    /etc/nginx/fastcgi.conf;
  index      /var/www/html/index.html;

  default_type application/octet-stream;
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  log_format download  '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         '"$http_range" "$sent_http_content_range"';

  client_header_timeout 3m;
  client_body_timeout   3m;
  send_timeout          3m;
  access_log            /var/log/nginx/access.log  main;
  gzip_buffers          4                          8k;
  gzip                  on;
  gzip_min_length       1100;
  gzip_disable          "msie6";
  sendfile              on;
  tcp_nopush            on;
  tcp_nodelay           on;
  keepalive_timeout     65;
  types_hash_max_size   2048;

  proxy_connect_timeout      70;
  proxy_send_timeout         90;
  proxy_read_timeout         90;
  client_max_body_size       10m;
  client_body_buffer_size    128k;
  proxy_set_header           Host             $host;
  proxy_set_header           X-Real-IP        $remote_addr;
  proxy_set_header           X-Forwarded-For  $proxy_add_x_forwarded_for;
  proxy_buffers              32               4k;

  server_names_hash_bucket_size 128; # this seems to be required for some vhosts

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
  ssl_prefer_server_ciphers on;

  upstream webapp {
    server 127.0.0.1:3000;
  }

  # simple reverse-proxy
  server {
    listen       80;
    server_name  elb.vms.sumanmukherjeetech.com;
    access_log   /var/log/nginx/webapp.log  main;

    location ~ ^/(images|javascript|js|css|flash|media|static)/  {
      root    /var/www/vhosts/webapp/public;
      expires 30d;
    }

    # pass requests for dynamic content to rails/node/python etc
    location / {
      proxy_pass                 http://webapp;
    }
  }

  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/sites-enabled/*;
}
