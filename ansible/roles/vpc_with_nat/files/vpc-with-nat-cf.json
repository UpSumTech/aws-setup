{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Creates VPC with NAT.",

  "Parameters": {},

  "Mappings": {
    "VpcNetworkCIDRs": {
      "us-east-1": { "CIDR": "10.20.0.0/16" },
      "us-east-2": { "CIDR": "10.21.0.0/16" },
      "us-west-1": { "CIDR": "10.22.0.0/16" },
      "us-west-2": { "CIDR": "10.23.0.0/16" },
      "ca-central-1": { "CIDR": "10.24.0.0/16" },
      "eu-west-1": { "CIDR": "10.25.0.0/16" },
      "eu-west-2": { "CIDR": "10.26.0.0/16" },
      "eu-central-1": { "CIDR": "10.27.0.0/16" },
      "ap-southeast-1": { "CIDR": "10.28.0.0/16" },
      "ap-southeast-2": { "CIDR": "10.29.0.0/16" },
      "ap-south-1": { "CIDR": "10.30.0.0/16" }
    },

    "VpcSubnetCIDRs": {
      "us-east-1": {
        "PublicSubnet1": "10.20.10.0/24",
        "PrivateSubnet1": "10.20.11.0/24",
        "PublicSubnet2": "10.20.110.0/24",
        "PrivateSubnet2": "10.20.111.0/24"
      },
      "us-east-2": {
        "PublicSubnet1": "10.21.10.0/24",
        "PrivateSubnet1": "10.21.11.0/24",
        "PublicSubnet2": "10.21.110.0/24",
        "PrivateSubnet2": "10.21.111.0/24"
      },
      "us-west-1": {
        "PublicSubnet1": "10.22.10.0/24",
        "PrivateSubnet1": "10.22.11.0/24",
        "PublicSubnet2": "10.22.110.0/24",
        "PrivateSubnet2": "10.22.111.0/24"
      },
      "us-west-2": {
        "PublicSubnet1": "10.23.10.0/24",
        "PrivateSubnet1": "10.23.11.0/24",
        "PublicSubnet1": "10.23.110.0/24",
        "PrivateSubnet2": "10.23.111.0/24"
      },
      "ca-central-1": {
        "PublicSubnet1": "10.24.10.0/24",
        "PrivateSubnet1": "10.24.11.0/24",
        "PublicSubnet2": "10.24.110.0/24",
        "PrivateSubnet2": "10.24.111.0/24"
      },
      "eu-west-1": {
        "PublicSubnet1": "10.25.10.0/24",
        "PrivateSubnet1": "10.25.11.0/24",
        "PublicSubnet2": "10.25.110.0/24",
        "PrivateSubnet2": "10.25.111.0/24"
      },
      "eu-west-2": {
        "PublicSubnet1": "10.26.10.0/24",
        "PrivateSubnet1": "10.26.11.0/24",
        "PublicSubnet2": "10.26.110.0/24",
        "PrivateSubnet2": "10.26.111.0/24"
      },
      "eu-central-1": {
        "PublicSubnet1": "10.27.10.0/24",
        "PrivateSubnet1": "10.27.11.0/24",
        "PublicSubnet2": "10.27.110.0/24",
        "PrivateSubnet2": "10.27.111.0/24"
      },
      "ap-southeast-1": {
        "PublicSubnet1": "10.28.10.0/24",
        "PrivateSubnet1": "10.28.11.0/24",
        "PublicSubnet2": "10.28.110.0/24",
        "PrivateSubnet2": "10.28.111.0/24"
      },
      "ap-southeast-2": {
        "PublicSubnet1": "10.29.10.0/24",
        "PrivateSubnet1": "10.29.11.0/24",
        "PublicSubnet2": "10.29.110.0/24",
        "PrivateSubnet2": "10.29.111.0/24"
      },
      "ap-south-1": {
        "PublicSubnet1": "10.30.10.0/24",
        "PrivateSubnet1": "10.30.11.0/24",
        "PublicSubnet2": "10.30.110.0/24",
        "PrivateSubnet2": "10.30.111.0/24"
      }
    }
  },

  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Fn::FindInMap": [ "VpcNetworkCIDRs", { "Ref": "AWS::Region" }, "CIDR" ] },
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [ "-", [ "vpc", { "Ref": "AWS::StackId" } ] ]
            }
          }
        ]
      }
    },

    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "CidrBlock": { "Fn::FindInMap": [ "VpcSubnetCIDRs", { "Ref": "AWS::Region" }, "PublicSubnet1" ] },
        "AvailabilityZone": { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [ "-", [ "public-subnet-1", { "Ref": "AWS::StackId" } ] ]
            }
          }
        ]
      }
    },

    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "CidrBlock": { "Fn::FindInMap": [ "VpcSubnetCIDRs", { "Ref": "AWS::Region" }, "PublicSubnet2" ] },
        "AvailabilityZone": { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [ "-", [ "public-subnet-2", { "Ref": "AWS::StackId" } ] ]
            }
          }
        ]
      }
    },

    "PrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "CidrBlock": { "Fn::FindInMap": [ "VpcSubnetCIDRs", { "Ref": "AWS::Region" }, "PrivateSubnet1" ] },
        "AvailabilityZone": { "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ] },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [ "-", [ "private-subnet-1", { "Ref": "AWS::StackId" } ] ]
            }
          }
        ]
      }
    },

    "PrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "CidrBlock": { "Fn::FindInMap": [ "VpcSubnetCIDRs", { "Ref": "AWS::Region" }, "PrivateSubnet2" ] },
        "AvailabilityZone": { "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ] },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [ "-", [ "private-subnet-2", { "Ref": "AWS::StackId" } ] ]
            }
          }
        ]
      }
    },

    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway"
    },

    "InternetGatewayAssociation": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "InternetGatewayId": { "Ref": "InternetGateway" }
      }
    },

    "NatIPAddress1": {
      "Type": "AWS::EC2::EIP",
      "DependsOn": "InternetGatewayAssociation",
      "Properties": {
        "Domain": "vpc"
      }
    },

    "NatIPAddress2": {
      "Type": "AWS::EC2::EIP",
      "DependsOn": "InternetGatewayAssociation",
      "Properties": {
        "Domain": "vpc"
      }
    },

    "NAT1": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": { "Fn::GetAtt": [ "NatIPAddress1", "AllocationId" ] },
        "SubnetId": { "Ref": "PublicSubnet1" }
      }
    },

    "NAT2": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": { "Fn::GetAtt": [ "NatIPAddress2", "AllocationId" ] },
        "SubnetId": { "Ref": "PublicSubnet2" }
      }
    },

    "InternetGatewayRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPC" }
      }
    },

    "InternetGatewayRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "InternetGatewayRouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "InternetGateway" }
      }
    },

    "PublicSubnetRouteTableAssociation1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnet1" },
        "RouteTableId": { "Ref": "InternetGatewayRouteTable" }
      }
    },

    "PublicSubnetRouteTableAssociation2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnet2" },
        "RouteTableId": { "Ref": "InternetGatewayRouteTable" }
      }
    },

    "NATRouteTable1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPC" }
      }
    },

    "NATRouteTable2": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPC" }
      }
    },

    "NATRoute1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "NATRouteTable1" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": { "Ref": "NAT1" }
      }
    },

    "NATRoute2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "NATRouteTable2" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": { "Ref": "NAT2" }
      }
    },

    "PrivateSubnetRouteTableAssociation1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivateSubnet1" },
        "RouteTableId": { "Ref": "NATRouteTable1" }
      }
    },

    "PrivateSubnetRouteTableAssociation2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivateSubnet2" },
        "RouteTableId": { "Ref": "NATRouteTable2" }
      }
    }

  },

  "Outputs": {
    "InstancePublicSubnetId1": {
      "Description": "The id of the public subnet 1",
      "Value": { "Ref": "PublicSubnet1" },
      "Export": {
        "Name": {
          "Fn::Join" : [
            "-",
            [
              { "Ref" : "AWS::StackName" },
              "InstancePublicSubnetId1",
            ]
          ]
        }
      }
    },

    "InstancePublicSubnetId2": {
      "Description": "The id of the public subnet 2",
      "Value": { "Ref": "PublicSubnet2" },
      "Export": {
        "Name": {
          "Fn::Join" : [
            "-",
            [
              { "Ref" : "AWS::StackName" },
              "InstancePublicSubnetId2",
            ]
          ]
        }
      }
    },

    "InstancePrivateSubnetId1": {
      "Description": "The id of the private subnet 1",
      "Value": { "Ref": "PrivateSubnet1" },
      "Export": {
        "Name": {
          "Fn::Join" : [
            "-",
            [
              { "Ref" : "AWS::StackName" },
              "InstancePrivateSubnetId1",
            ]
          ]
        }
      }
    },

    "InstancePrivateSubnetId2": {
      "Description": "The id of the private subnet 2",
      "Value": { "Ref": "PrivateSubnet2" },
      "Export": {
        "Name": {
          "Fn::Join" : [
            "-",
            [
              { "Ref" : "AWS::StackName" },
              "InstancePrivateSubnetId2",
            ]
          ]
        }
      }
    },

    "VpcId": {
      "Description": "The vpc with nat id",
      "Value": {"Ref": "VPC"},
      "Export": {
        "Name": {
          "Fn::Join" : [
            "-",
            [
              { "Ref" : "AWS::StackName" },
              "VpcId",
            ]
          ]
        }
      }
    }
  }
}
