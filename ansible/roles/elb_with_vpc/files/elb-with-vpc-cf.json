{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Creates elb inside a VPC",

  "Parameters": {
    "VpcStackName": {
      "Description": "The VPC stack name",
      "Type": "String",
      "ConstraintDescription": "This must be an existing VPC stack name"
    },

    "SecurityGroupStackName": {
      "Description": "The security group stack name",
      "Type": "String",
      "ConstraintDescription": "This must be an existing stack name for security groups"
    },

    "StackNamesForEC2Instances": {
      "Description": "The ec2 instance stack names",
      "Type": "List<String>",
      "ConstraintDescription": "This must be existing stack names for ec2 instances"
    }
  },

  "Mappings": {
    "SubnetTypeMap": {
      "public1": {
        "SubnetImportName": "PublicSubnetId1"
      },
      "public2": {
        "SubnetImportName": "PublicSubnetId2"
      }
    }
  },

  "Resources": {
    "ElasticLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "LoadBalancerName": {"Fn::Join": ["-", ["elb", "webapp", { "Ref": "AWS::Region" } ]]},
        "Instances": [
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${StackName}-InstanceId",
                {
                  "StackName": {"Fn::Select": ["0", {"Ref": "StackNamesForEC2Instances"}]}
                }
              ]
            }
          },

          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${StackName}-InstanceId",
                {
                  "StackName": {"Fn::Select": ["1", {"Ref": "StackNamesForEC2Instances"}]}
                }
              ]
            }
          }
        ],

        "SecurityGroups": [
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${StackName}-${SecurityGroupImportName}",
                {
                  "StackName": {"Ref": "SecurityGroupStackName"},
                  "SecurityGroupImportName": "LoadBalancerSecurityGroupId"
                }
              ]
            }
          }
        ],

        "Subnets": [
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${StackName}-${SubnetIdImportName}",
                {
                  "StackName": {"Ref": "VpcStackName"},
                  "SubnetIdImportName": {"Fn::FindInMap": ["SubnetTypeMap", "public1", "SubnetImportName"]}
                }
              ]
            }
          },
          {
            "Fn::ImportValue": {
              "Fn::Sub": [
                "${StackName}-${SubnetIdImportName}",
                {
                  "StackName": {"Ref": "VpcStackName"},
                  "SubnetIdImportName": {"Fn::FindInMap": ["SubnetTypeMap", "public2", "SubnetImportName"]}
                }
              ]
            }
          }
        ],

        "Listeners": [
          {
            "LoadBalancerPort": "80",
            "InstancePort": "80",
            "Protocol": "HTTP"
          }
        ],

        "HealthCheck": {
          "Target": { "Fn::Join": [ "", ["HTTP:80", "/"]]},
          "HealthyThreshold": "5",
          "UnhealthyThreshold": "3",
          "Interval": "30",
          "Timeout": "5"
        }
      }
    }
  },

  "Outputs": {
    "ELBId": {
      "Description": "Elastic loadbalancer id",
      "Value": {"Ref": "ElasticLoadBalancer"},
      "Export": {
        "Name": {
          "Fn::Join": [
            "-",
            [
              { "Ref": "AWS::StackName" },
              "ElasticLoadBalancerId"
            ]
          ]
        }
      }
    },

    "ELBHostedZoneId": {
      "Description": "Elastic loadbalancer hosted zone name",
      "Value": {"Fn::GetAtt": ["ElasticLoadBalancer", "CanonicalHostedZoneNameID"]},
      "Export": {
        "Name": {
          "Fn::Join": [
            "-",
            [
              { "Ref": "AWS::StackName" },
              "ElasticLoadBalancerHostedZoneID"
            ]
          ]
        }
      }
    },

    "ELBDns": {
      "Description": "Elastic loadbalancer id",
      "Value": {"Fn::GetAtt": ["ElasticLoadBalancer", "DNSName"]},
      "Export": {
        "Name": {
          "Fn::Join": [
            "-",
            [
              { "Ref": "AWS::StackName" },
              "ElasticLoadBalancerDNS"
            ]
          ]
        }
      }
    }
  }
}
